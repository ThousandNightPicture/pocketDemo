<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myq.module.system.user.dao.UserMapper" >
  
  	<resultMap id="BaseResultMap" type="User">
	    <result column="id" jdbcType="BIGINT" property="id" />
	    <result column="username" jdbcType="VARCHAR" property="username" />
	    <result column="password" jdbcType="VARCHAR" property="password" />
	    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
	    <result column="phone" jdbcType="VARCHAR" property="phone" />
	    <result column="email" jdbcType="VARCHAR" property="email" />
	    <result column="status" jdbcType="INTEGER" property="status" />
	    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	    <result column="lastlogin_time" jdbcType="TIMESTAMP" property="lastloginTime" />
	    <result column="remark" jdbcType="VARCHAR" property="remark" />
	 </resultMap>
  	
  	<sql id="table_name">
  		sys_user
  	</sql>
	<sql id="field" >
	    id, username, password, nickname, phone, 
	    email, status, create_time, lastlogin_time,
	    remark
	</sql>
	
	
  	<sql id="limit_sql">
  	   <if test="page_sql != null and page_sql != ''">
      		${page_sql}
       </if>
  	</sql>
  
  	<sql id="where_all">
  		<where>
  		<if test="findContent != null and findContent !='' " >
	        and (
	        LOWER(nickname) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")) or
	        LOWER(email) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%"))
	        )
      	</if>
      	</where>
  	</sql>
  
  	<!-- 登录 -->
  	<select id="login" resultMap="BaseResultMap" >
  	 	select 
    		<include refid="field"/>
    	from 
			<include refid="table_name"/>
    	where 1=1 and password = #{password}
    		and (username = #{username}
    			or phone = #{phone}
    			or email = #{email})
  	</select>
  
  	<update id="updateSelective" parameterType="User" >
    	update 
			<include refid="table_name"/>
    	<set>
	      <if test="nickname != null">
	        nickname = #{nickname},
	      </if>
	      <if test="email != null" >
	        email = #{email},
	      </if>
	      <if test="password != null" >
	        pswd = #{password},
	      </if>
	      <if test="lastloginTime != null" >
	        lastlogin_time = #{lastloginTime},
	      </if>
	      <if test="status != null" >
	        status = #{status},
	      </if>
	    </set>
    	where id = #{id,jdbcType=BIGINT}
  	</update>
  
  
  
  
  
  
 
</mapper>
